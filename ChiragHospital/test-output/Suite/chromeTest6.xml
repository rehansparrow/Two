<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="SCTL-BA-I3-14" failures="0" tests="50" name="chromeTest6" time="20.79" errors="0" timestamp="19 Feb 2019 07:25:26 GMT">
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="17.466">
    <failure type="org.openqa.selenium.StaleElementReferenceException" message="stale element reference: element is not attached to the page document
  (Session info: chrome=72.0.3626.109)
  (Driver info: chromedriver=2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;SCTL-BA-I3-14&amp;apos;, ip: &amp;apos;192.168.1.86&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;10.0.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.39.562718 (9a2698cba08cf5..., userDataDir: C:\Users\shaikh\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 72.0.3626.109, webStorageEnabled: true}
Session ID: f742cf4242839af7ebd59cf1df489823">
      <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=72.0.3626.109)
  (Driver info: chromedriver=2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SCTL-BA-I3-14', ip: '192.168.1.86', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.39.562718 (9a2698cba08cf5..., userDataDir: C:\Users\shaikh\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 72.0.3626.109, webStorageEnabled: true}
Session ID: f742cf4242839af7ebd59cf1df489823
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at testCase.SaleInvoiceNewCreate.setUP(SaleInvoiceNewCreate.java:141)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:844)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@BeforeMethod setUP" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUP -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.001">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
  <testcase classname="testCase.SaleInvoiceNewCreate" name="createSales" time="0.0">
    <skipped/>
  </testcase> <!-- createSales -->
</testsuite> <!-- chromeTest6 -->
